***************
*** 64,112 ****
    sci->brr = 64; /* 20MHzのクロックから9600bpsを生成(25MHzの場合は80にする) */
    sci->scr = H8_3069F_SCI_SCR_RE | H8_3069F_SCI_SCR_TE; /* 送受信可能 */
    sci->ssr = 0;
  
    return 0;
  }
  
  /* 送信可能か？ */
  int serial_is_send_enable(int index)
  {
    volatile struct h8_3069f_sci *sci = regs[index].sci;
    return (sci->ssr & H8_3069F_SCI_SSR_TDRE);
  }
  
  /* １文字送信 */
  int serial_send_byte(int index, unsigned char c)
  {
    volatile struct h8_3069f_sci *sci = regs[index].sci;
  
    /* 送信可能になるまで待つ */
    while (!serial_is_send_enable(index))
      ;
    sci->tdr = c;
    sci->ssr &= ~H8_3069F_SCI_SSR_TDRE; /* 送信開始 */
  
    return 0;
  }
  
  /* 受信可能か？ */
  int serial_is_recv_enable(int index)
  {
    volatile struct h8_3069f_sci *sci = regs[index].sci;
    return (sci->ssr & H8_3069F_SCI_SSR_RDRF);
  }
  
  /* １文字受信 */
  unsigned char serial_recv_byte(int index)
  {
    volatile struct h8_3069f_sci *sci = regs[index].sci;
    unsigned char c;
  
    /* 受信文字が来るまで待つ */
    while (!serial_is_recv_enable(index))
      ;
    c = sci->rdr;
    sci->ssr &= ~H8_3069F_SCI_SSR_RDRF; /* 受信完了 */
  
    return c;
  
--- 64,143 ----
    sci->brr = 64; /* 20MHzのクロックから9600bpsを生成(25MHzの場合は80にする) */
    sci->scr = H8_3069F_SCI_SCR_RE | H8_3069F_SCI_SCR_TE; /* 送受信可能 */
    sci->ssr = 0;
  
    return 0;
  }
  
  /* 送信可能か？ */
  int serial_is_send_enable(int index)
  {
+ #ifndef SIMULATOR
    volatile struct h8_3069f_sci *sci = regs[index].sci;
    return (sci->ssr & H8_3069F_SCI_SSR_TDRE);
+ #else
+   return 1;
+ #endif
  }
  
  /* １文字送信 */
  int serial_send_byte(int index, unsigned char c)
  {
+ #ifndef SIMULATOR
    volatile struct h8_3069f_sci *sci = regs[index].sci;
  
    /* 送信可能になるまで待つ */
    while (!serial_is_send_enable(index))
      ;
    sci->tdr = c;
    sci->ssr &= ~H8_3069F_SCI_SSR_TDRE; /* 送信開始 */
  
    return 0;
+ #else
+   char buf[1];
+   buf[0] = c;
+ 
+   asm volatile ("mov.l #1,er0");
+   asm volatile ("mov.l %0,er1" :: "r"(buf));
+   asm volatile ("mov.l #1,er2");
+   asm volatile ("jsr 0xc7");
+ 
+   return 0;
+ #endif
  }
  
  /* 受信可能か？ */
  int serial_is_recv_enable(int index)
  {
+ #ifndef SIMULATOR
    volatile struct h8_3069f_sci *sci = regs[index].sci;
    return (sci->ssr & H8_3069F_SCI_SSR_RDRF);
+ #else
+   return 1;
+ #endif
  }
  
  /* １文字受信 */
  unsigned char serial_recv_byte(int index)
  {
+ #ifndef SIMULATOR
    volatile struct h8_3069f_sci *sci = regs[index].sci;
    unsigned char c;
  
    /* 受信文字が来るまで待つ */
    while (!serial_is_recv_enable(index))
      ;
    c = sci->rdr;
    sci->ssr &= ~H8_3069F_SCI_SSR_RDRF; /* 受信完了 */
  
    return c;
+ #else
+   char buf[1];
+ 
+   asm volatile ("mov.l #0,er0");
+   asm volatile ("mov.l %0,er1" :: "r"(buf));
+   asm volatile ("mov.l #1,er2");
+   asm volatile ("jsr 0xc6");
+ 
+   return buf[0];
+ #endif
  
